!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFFER_ORDER	mmc_test.c	32;"	d	file:
BUFFER_ORDER	ucore_mmcblk.c	35;"	d	file:
BUFFER_SIZE	mmc_test.c	33;"	d	file:
BUFFER_SIZE	ucore_mmcblk.c	36;"	d	file:
DEV_NAME	char_example.c	27;"	d	file:
DOS_MBR	part_dos.h	33;"	d
DOS_PART_MAGIC_OFFSET	part_dos.h	29;"	d
DOS_PART_TBL_OFFSET	part_dos.h	28;"	d
DOS_PBR	part_dos.h	34;"	d
DOS_PBR32_FSTYPE_OFFSET	part_dos.h	31;"	d
DOS_PBR_FSTYPE_OFFSET	part_dos.h	30;"	d
DOS_PBR_MEDIA_TYPE_OFFSET	part_dos.h	32;"	d
MAJOR_NUM	char_example.c	25;"	d	file:
MAX_LABEL_LEN	ucore_mmcblk.c	39;"	d	file:
MAX_PARTITIONS	ucore_mmcblk.c	38;"	d	file:
MINOR_NUM	char_example.c	26;"	d	file:
RESULT_FAIL	mmc_test.c	28;"	d	file:
RESULT_FAIL	ucore_mmcblk.c	31;"	d	file:
RESULT_OK	mmc_test.c	27;"	d	file:
RESULT_OK	ucore_mmcblk.c	30;"	d	file:
RESULT_UNSUP_CARD	mmc_test.c	30;"	d	file:
RESULT_UNSUP_CARD	ucore_mmcblk.c	33;"	d	file:
RESULT_UNSUP_HOST	mmc_test.c	29;"	d	file:
RESULT_UNSUP_HOST	ucore_mmcblk.c	32;"	d	file:
_DISK_PART_DOS_H	part_dos.h	25;"	d
__UCORE_IDE_PART_H	part.h	20;"	d
__init_mmc_ide_device	ucore_mmcblk.c	/^static void __init_mmc_ide_device(struct ide_device* dev)$/;"	f	file:	signature:(struct ide_device* dev)
__mmc_test_prepare	mmc_test.c	/^static int __mmc_test_prepare(struct mmc_test_card *test, int write)$/;"	f	file:	signature:(struct mmc_test_card *test, int write)
boot_ind	part_dos.h	/^	unsigned char boot_ind;		\/* 0x80 - active			*\/$/;"	m	struct:dos_partition	access:public
buffer	mmc_test.c	/^	u8		*buffer;$/;"	m	struct:mmc_test_card	file:	access:public
buffer	ucore_mmcblk.c	/^	u8		*buffer;$/;"	m	struct:mmc_ucore_card	file:	access:public
card	mmc_test.c	/^	struct mmc_card	*card;$/;"	m	struct:mmc_test_card	typeref:struct:mmc_test_card::mmc_card	file:	access:public
card	ucore_mmcblk.c	/^	struct mmc_card	*card;$/;"	m	struct:mmc_ucore_card	typeref:struct:mmc_ucore_card::mmc_card	file:	access:public
cdev	char_example.c	/^    struct cdev cdev;$/;"	m	struct:hzf_dev	typeref:struct:hzf_dev::cdev	file:	access:public
cyl	part_dos.h	/^	unsigned char cyl;		\/* starting cylinder			*\/$/;"	m	struct:dos_partition	access:public
data	char_example.c	/^    int data;$/;"	m	struct:hzf_dev	file:	access:public
dos_partition	part_dos.h	/^typedef struct dos_partition {$/;"	s
dos_partition::boot_ind	part_dos.h	/^	unsigned char boot_ind;		\/* 0x80 - active			*\/$/;"	m	struct:dos_partition	access:public
dos_partition::cyl	part_dos.h	/^	unsigned char cyl;		\/* starting cylinder			*\/$/;"	m	struct:dos_partition	access:public
dos_partition::end_cyl	part_dos.h	/^	unsigned char end_cyl;		\/* end cylinder				*\/$/;"	m	struct:dos_partition	access:public
dos_partition::end_head	part_dos.h	/^	unsigned char end_head;		\/* end head				*\/$/;"	m	struct:dos_partition	access:public
dos_partition::end_sector	part_dos.h	/^	unsigned char end_sector;	\/* end sector				*\/$/;"	m	struct:dos_partition	access:public
dos_partition::head	part_dos.h	/^	unsigned char head;		\/* starting head			*\/$/;"	m	struct:dos_partition	access:public
dos_partition::sector	part_dos.h	/^	unsigned char sector;		\/* starting sector			*\/$/;"	m	struct:dos_partition	access:public
dos_partition::size4	part_dos.h	/^	unsigned char size4[4];		\/* nr of sectors in partition		*\/$/;"	m	struct:dos_partition	access:public
dos_partition::start4	part_dos.h	/^	unsigned char start4[4];	\/* starting sector counting from 0	*\/$/;"	m	struct:dos_partition	access:public
dos_partition::sys_ind	part_dos.h	/^	unsigned char sys_ind;		\/* What partition type			*\/$/;"	m	struct:dos_partition	access:public
dos_partition_t	part_dos.h	/^} dos_partition_t;$/;"	t	typeref:struct:dos_partition
end_cyl	part_dos.h	/^	unsigned char end_cyl;		\/* end cylinder				*\/$/;"	m	struct:dos_partition	access:public
end_head	part_dos.h	/^	unsigned char end_head;		\/* end head				*\/$/;"	m	struct:dos_partition	access:public
end_sector	part_dos.h	/^	unsigned char end_sector;	\/* end sector				*\/$/;"	m	struct:dos_partition	access:public
get_partition_info_dos	part.h	/^int get_partition_info_dos (struct ide_device * dev_desc, int part, ucore_disk_partition_t *info);$/;"	p	signature:(struct ide_device * dev_desc, int part, ucore_disk_partition_t *info)
get_partition_info_dos	part_dos.c	/^int get_partition_info_dos (struct ide_device *dev_desc, int part, ucore_disk_partition_t * info)$/;"	f	signature:(struct ide_device *dev_desc, int part, ucore_disk_partition_t * info)
get_partition_info_extended	part_dos.c	/^static int get_partition_info_extended (struct ide_device *dev_desc, int ext_part_sector,$/;"	f	file:	signature:(struct ide_device *dev_desc, int ext_part_sector, int relative, int part_num, int which_part, ucore_disk_partition_t *info)
head	part_dos.h	/^	unsigned char head;		\/* starting head			*\/$/;"	m	struct:dos_partition	access:public
highmem	mmc_test.c	/^	struct page	*highmem;$/;"	m	struct:mmc_test_card	typeref:struct:mmc_test_card::page	file:	access:public
hzf_cdev_ops	char_example.c	/^static struct file_operations hzf_cdev_ops =$/;"	v	typeref:struct:file_operations	file:
hzf_cleanup	char_example.c	/^module_exit(hzf_cleanup);$/;"	v
hzf_cleanup	char_example.c	/^static void __exit hzf_cleanup (void)$/;"	f	file:	signature:(void)
hzf_dev	char_example.c	/^struct hzf_dev$/;"	s	file:
hzf_dev::cdev	char_example.c	/^    struct cdev cdev;$/;"	m	struct:hzf_dev	typeref:struct:hzf_dev::cdev	file:	access:public
hzf_dev::data	char_example.c	/^    int data;$/;"	m	struct:hzf_dev	file:	access:public
hzf_init	char_example.c	/^module_init(hzf_init);$/;"	v
hzf_init	char_example.c	/^static int __init hzf_init(void)$/;"	f	file:	signature:(void)
hzf_major	char_example.c	/^static int hzf_major = MAJOR_NUM;$/;"	v	file:
hzf_minor	char_example.c	/^static int hzf_minor = MINOR_NUM;$/;"	v	file:
hzf_read	char_example.c	/^static ssize_t hzf_read(struct file *file, char __user *buf, size_t count,$/;"	f	file:	signature:(struct file *file, char __user *buf, size_t count, loff_t *offset)
hzf_var	char_example.c	/^static int hzf_var = 0;$/;"	v	file:
hzf_write	char_example.c	/^static ssize_t hzf_write(struct file *file, const char __user *buf,$/;"	f	file:	signature:(struct file *file, const char __user *buf, size_t count,loff_t *offset)
is_extended	part_dos.c	/^static inline int is_extended(int part_type)$/;"	f	file:	signature:(int part_type)
le32_to_int	part_dos.c	/^static inline int le32_to_int(unsigned char *le32)$/;"	f	file:	signature:(unsigned char *le32)
mmc_disk_init	ucore_mmcblk.c	/^static void mmc_disk_init(struct ide_device* dev)$/;"	f	file:	signature:(struct ide_device* dev)
mmc_disk_read	ucore_mmcblk.c	/^static int mmc_disk_read(struct ide_device* dev, unsigned long secno, void *dst, unsigned long nsecs)$/;"	f	file:	signature:(struct ide_device* dev, unsigned long secno, void *dst, unsigned long nsecs)
mmc_disk_write	ucore_mmcblk.c	/^static int mmc_disk_write(struct ide_device* dev, unsigned long secno,const  void *src, unsigned long nsecs)$/;"	f	file:	signature:(struct ide_device* dev, unsigned long secno,const void *src, unsigned long nsecs)
mmc_driver	mmc_test.c	/^static struct mmc_driver mmc_driver = {$/;"	v	typeref:struct:mmc_driver	file:
mmc_driver	ucore_mmcblk.c	/^static struct mmc_driver mmc_driver = {$/;"	v	typeref:struct:mmc_driver	file:
mmc_test_basic_read	mmc_test.c	/^static int mmc_test_basic_read(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_basic_write	mmc_test.c	/^static int mmc_test_basic_write(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_buffer_transfer	mmc_test.c	/^static int mmc_test_buffer_transfer(struct mmc_test_card *test,$/;"	f	file:	signature:(struct mmc_test_card *test, u8 *buffer, unsigned addr, unsigned blksz, int write)
mmc_test_buffer_transfer	ucore_mmcblk.c	/^static int mmc_test_buffer_transfer(struct mmc_ucore_card *test,$/;"	f	file:	signature:(struct mmc_ucore_card *test, u8 *buffer, unsigned addr, unsigned blksz, int write)
mmc_test_card	mmc_test.c	/^struct mmc_test_card {$/;"	s	file:
mmc_test_card::buffer	mmc_test.c	/^	u8		*buffer;$/;"	m	struct:mmc_test_card	file:	access:public
mmc_test_card::card	mmc_test.c	/^	struct mmc_card	*card;$/;"	m	struct:mmc_test_card	typeref:struct:mmc_test_card::mmc_card	file:	access:public
mmc_test_card::highmem	mmc_test.c	/^	struct page	*highmem;$/;"	m	struct:mmc_test_card	typeref:struct:mmc_test_card::page	file:	access:public
mmc_test_card::scratch	mmc_test.c	/^	u8		scratch[BUFFER_SIZE];$/;"	m	struct:mmc_test_card	file:	access:public
mmc_test_check_result	mmc_test.c	/^static int mmc_test_check_result(struct mmc_test_card *test,$/;"	f	file:	signature:(struct mmc_test_card *test, struct mmc_request *mrq)
mmc_test_check_result	ucore_mmcblk.c	/^static int mmc_test_check_result(struct mmc_ucore_card *test,$/;"	f	file:	signature:(struct mmc_ucore_card *test, struct mmc_request *mrq)
mmc_test_cleanup	mmc_test.c	/^static int mmc_test_cleanup(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_exit	mmc_test.c	/^module_exit(mmc_test_exit);$/;"	v
mmc_test_exit	mmc_test.c	/^static void __exit mmc_test_exit(void)$/;"	f	file:	signature:(void)
mmc_test_init	mmc_test.c	/^module_init(mmc_test_init);$/;"	v
mmc_test_init	mmc_test.c	/^static int __init mmc_test_init(void)$/;"	f	file:	signature:(void)
mmc_test_prepare_mrq	mmc_test.c	/^static void mmc_test_prepare_mrq(struct mmc_test_card *test,$/;"	f	file:	signature:(struct mmc_test_card *test, struct mmc_request *mrq, struct scatterlist *sg, unsigned sg_len, unsigned dev_addr, unsigned blocks, unsigned blksz, int write)
mmc_test_prepare_mrq	ucore_mmcblk.c	/^static void mmc_test_prepare_mrq(struct mmc_ucore_card *test,$/;"	f	file:	signature:(struct mmc_ucore_card *test, struct mmc_request *mrq, struct scatterlist *sg, unsigned sg_len, unsigned dev_addr, unsigned blocks, unsigned blksz, int write)
mmc_test_prepare_read	mmc_test.c	/^static int mmc_test_prepare_read(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_prepare_write	mmc_test.c	/^static int mmc_test_prepare_write(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_probe	mmc_test.c	/^static int mmc_test_probe(struct mmc_card *card)$/;"	f	file:	signature:(struct mmc_card *card)
mmc_test_remove	mmc_test.c	/^static void mmc_test_remove(struct mmc_card *card)$/;"	f	file:	signature:(struct mmc_card *card)
mmc_test_set_blksize	mmc_test.c	/^static int mmc_test_set_blksize(struct mmc_test_card *test, unsigned size)$/;"	f	file:	signature:(struct mmc_test_card *test, unsigned size)
mmc_test_set_blksize	ucore_mmcblk.c	/^static int mmc_test_set_blksize(struct mmc_ucore_card *test, unsigned size)$/;"	f	file:	signature:(struct mmc_ucore_card *test, unsigned size)
mmc_test_show	mmc_test.c	/^static ssize_t mmc_test_show(struct device *dev,$/;"	f	file:	signature:(struct device *dev, struct device_attribute *attr, char *buf)
mmc_test_simple_transfer	mmc_test.c	/^static int mmc_test_simple_transfer(struct mmc_test_card *test,$/;"	f	file:	signature:(struct mmc_test_card *test, struct scatterlist *sg, unsigned sg_len, unsigned dev_addr, unsigned blocks, unsigned blksz, int write)
mmc_test_simple_transfer	ucore_mmcblk.c	/^static int mmc_test_simple_transfer(struct mmc_ucore_card *test,$/;"	f	file:	signature:(struct mmc_ucore_card *test, struct scatterlist *sg, unsigned sg_len, unsigned dev_addr, unsigned blocks, unsigned blksz, int write)
mmc_test_store	mmc_test.c	/^static ssize_t mmc_test_store(struct device *dev,$/;"	f	file:	signature:(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
mmc_test_wait_busy	mmc_test.c	/^static int mmc_test_wait_busy(struct mmc_test_card *test)$/;"	f	file:	signature:(struct mmc_test_card *test)
mmc_test_wait_busy	ucore_mmcblk.c	/^static int mmc_test_wait_busy(struct mmc_ucore_card *test)$/;"	f	file:	signature:(struct mmc_ucore_card *test)
mmc_ucore_card	ucore_mmcblk.c	/^struct mmc_ucore_card{$/;"	s	file:
mmc_ucore_card::buffer	ucore_mmcblk.c	/^	u8		*buffer;$/;"	m	struct:mmc_ucore_card	file:	access:public
mmc_ucore_card::card	ucore_mmcblk.c	/^	struct mmc_card	*card;$/;"	m	struct:mmc_ucore_card	typeref:struct:mmc_ucore_card::mmc_card	file:	access:public
mmc_ucore_card::part0_start_sec	ucore_mmcblk.c	/^  size_t part0_start_sec;$/;"	m	struct:mmc_ucore_card	file:	access:public
mmc_ucore_card::partitioned	ucore_mmcblk.c	/^  int    partitioned;$/;"	m	struct:mmc_ucore_card	file:	access:public
mmc_ucore_card::ucore_dev	ucore_mmcblk.c	/^  struct ide_device *ucore_dev;$/;"	m	struct:mmc_ucore_card	typeref:struct:mmc_ucore_card::ide_device	file:	access:public
my_cdev	char_example.c	/^struct hzf_dev my_cdev;$/;"	v	typeref:struct:hzf_dev
part0_start_sec	ucore_mmcblk.c	/^  size_t part0_start_sec;$/;"	m	struct:mmc_ucore_card	file:	access:public
partitioned	ucore_mmcblk.c	/^  int    partitioned;$/;"	m	struct:mmc_ucore_card	file:	access:public
pname	char_example.c	/^static char *pname = DEV_NAME;$/;"	v	file:
print_one_part	part_dos.c	/^static void print_one_part (dos_partition_t *p, int ext_part_sector, int part_num)$/;"	f	file:	signature:(dos_partition_t *p, int ext_part_sector, int part_num)
print_part_dos	part.h	/^void print_part_dos (struct ide_device *dev_desc);$/;"	p	signature:(struct ide_device *dev_desc)
print_part_dos	part_dos.c	/^void print_part_dos (struct ide_device *dev_desc)$/;"	f	signature:(struct ide_device *dev_desc)
print_partition_extended	part_dos.c	/^static void print_partition_extended (struct ide_device *dev_desc, int ext_part_sector, int relative,$/;"	f	file:	signature:(struct ide_device *dev_desc, int ext_part_sector, int relative, int part_num)
scratch	mmc_test.c	/^	u8		scratch[BUFFER_SIZE];$/;"	m	struct:mmc_test_card	file:	access:public
sector	part_dos.h	/^	unsigned char sector;		\/* starting sector			*\/$/;"	m	struct:dos_partition	access:public
size4	part_dos.h	/^	unsigned char size4[4];		\/* nr of sectors in partition		*\/$/;"	m	struct:dos_partition	access:public
start4	part_dos.h	/^	unsigned char start4[4];	\/* starting sector counting from 0	*\/$/;"	m	struct:dos_partition	access:public
sys_ind	part_dos.h	/^	unsigned char sys_ind;		\/* What partition type			*\/$/;"	m	struct:dos_partition	access:public
test_block_type	part_dos.c	/^static int test_block_type(unsigned char *buffer)$/;"	f	file:	signature:(unsigned char *buffer)
test_now	mmc_test.c	/^static int test_now(struct mmc_card *card)$/;"	f	file:	signature:(struct mmc_card *card)
test_part_dos	part.h	/^int   test_part_dos (struct ide_device *dev_desc);$/;"	p	signature:(struct ide_device *dev_desc)
test_part_dos	part_dos.c	/^int test_part_dos (struct ide_device *dev_desc)$/;"	f	signature:(struct ide_device *dev_desc)
ucore_dev	ucore_mmcblk.c	/^  struct ide_device *ucore_dev;$/;"	m	struct:mmc_ucore_card	typeref:struct:mmc_ucore_card::ide_device	file:	access:public
ucore_mmcblk_exit	ucore_mmcblk.c	/^module_exit(ucore_mmcblk_exit);$/;"	v
ucore_mmcblk_exit	ucore_mmcblk.c	/^static void __exit ucore_mmcblk_exit(void)$/;"	f	file:	signature:(void)
ucore_mmcblk_init	ucore_mmcblk.c	/^module_init(ucore_mmcblk_init);$/;"	v
ucore_mmcblk_init	ucore_mmcblk.c	/^static int __init ucore_mmcblk_init(void)$/;"	f	file:	signature:(void)
ucore_mmcblk_probe	ucore_mmcblk.c	/^static int ucore_mmcblk_probe(struct mmc_card *card)$/;"	f	file:	signature:(struct mmc_card *card)
ucore_mmcblk_remove	ucore_mmcblk.c	/^static void ucore_mmcblk_remove(struct mmc_card *card)$/;"	f	file:	signature:(struct mmc_card *card)
