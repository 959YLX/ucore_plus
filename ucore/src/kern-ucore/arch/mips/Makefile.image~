ifneq ($(MAKECMDGOALS),clean)
include $(KCONFIG_AUTOCONFIG)
endif


ARCH_DIR := $(KTREE)/arch/${ARCH}
BLTREE = $(TOPDIR)/src/bootloader
BOOTSECT   := $(OBJPATH_ROOT)/bootloader/loader.bin

MODULES   := init libs debug driver trap mm process schedule syscall fs fs/vfs fs/sfs fs/devs glue-ucore
SRC_DIR   := $(addprefix $(ARCH_DIR)/,$(MODULES))

USER_APPLIST:= pwd cat sh ls forktest yield hello faultreadkernel faultread badarg
#USER_APP_BINS:= $(addprefix $(ARCH_DIR)/user/, $(USER_APPLIST))

# filesystem

#MACH_DEF 	:= -DMACH_QEMU
#USER_SRCDIR 	:= $(ARCH_DIR)/user


#USER_LIB_SRCDIR := $(USER_SRCDIR)/libs
INCLUDES	:= $(addprefix -I,$(SRC_DIR))


USER_LIB    	:= $(KTREE_OBJ_ROOT)/libuser.a
USER_OBJDIR 	:= $(OBJPATH_ROOT)/user_obj
USER_LIB_OBJDIR	:= $(USER_OBJDIR)

ASMSRC    	:= $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.S))
MIPS_S_OBJ     	:= $(patsubst $(ARCH_DIR)/%.S, $(USER_LIB_OBJDIR)/%.o, $(ASMSRC))

USER_LIB_SRC 	:= $(foreach sdir,$(USER_LIB_SRCDIR),$(wildcard $(sdir)/*.c))
USER_LIB_OBJ 	:= $(patsubst $(USER_LIB_SRCDIR)/%.c, $(USER_LIB_OBJDIR)/%.o, $(USER_LIB_SRC))
HOSTCFLAGS	:= -g -Wall -O2

ROOTFS_IMG	:= $(OBJPATH_ROOT)/sfs-orig.img

INITRD_BLOCK_CNT:=4000 

MK_DIR:
	rm -rf $(USER_OBJDIR)
	mkdir $(USER_OBJDIR)
	mkdir $(USER_OBJDIR)/init
	mkdir $(USER_OBJDIR)/trap
	mkdir $(USER_OBJDIR)/process

$(TOOL_MKSFS): $(ARCH_DIR)/tools/mksfs.c
	$(HOSTCC) -Wall -O2 -D_FILE_OFFSET_BITS=64 -o $@ $^


$(USER_LIB_OBJ): $(USER_OBJDIR)/%.o: $(USER_LIB_SRCDIR)/%.c
	$(TARGET_CC) -c $(INCLUDES) $(TARGET_CFLAGS) $<  -o $@

$(MIPS_S_OBJ): $(USER_OBJDIR)/%.o: $(ARCH_DIR)/%.S MK_DIR
	$(TARGET_CC) -mips32 -c -D__ASSEMBLY__ -DMACH_QEMU -g -EL -G0 $(INCLUDES) $<  -o $@


$(USER_LIB): $(USER_LIB_OBJ)
	@echo "Building USERLIB"
	$(TARGET_AR) rcs $@ $(USER_LIB_OBJ)

$(KTREE_OBJ_ROOT)/ucore-kernel-initrd: $(TOOL_MKSFS) $(OBJ) $(MIPS_S_OBJ) $(ARCH_DIR)/ucore.ld 
	#touch $(ROOTFS_IMG)
	sed 's%_FILE_%$(ROOTFS_IMG)%g' tools/initrd_piggy.S.in > $(USER_OBJDIR)/initrd_piggy.S
	mips-elf-as -EL -g -mips32 $(USER_OBJDIR)/initrd_piggy.S -o $(USER_OBJDIR)/initrd.img.o
	@echo LINK $@
	$(TARGET_LD)  -nostdlib -n -G 0 -static -T $(ARCH_DIR)/ucore.ld $(KERNEL_BUILTIN) \
				 $(MIPS_S_OBJ) $(USER_OBJDIR)/initrd.img.o -o $@


$(BOOTSECT): $(OBJPATH_ROOT)
	$(Q)$(MAKE) -C $(BLTREE) -f $(BLTREE)/Makefile all

.PHONY: all clean FORCE
all: $(BOOTSECT) $(TOOL_MKSFS) $(USER_LIB) $(KTREE_OBJ_ROOT)/ucore-kernel-initrd 

FORCE:

clean:
	rm -f $(KERNEL_ELF) $(LINK_FILE)
